% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr.R
\name{dplyr}
\alias{dplyr}
\alias{mutate.eeg_lst}
\alias{transmute.eeg_lst}
\alias{filter.eeg_lst}
\alias{summarise.eeg_lst}
\alias{group_by.eeg_lst}
\alias{ungroup.eeg_lst}
\alias{groups.eeg_lst}
\alias{group_vars.eeg_lst}
\alias{select.eeg_lst}
\alias{rename.eeg_lst}
\alias{left_join.eeg_lst}
\alias{semi_join.eeg_lst}
\alias{anti_join.eeg_lst}
\alias{tbl_vars.eeg_lst}
\title{Dplyr functions for eeg_lst objects.}
\usage{
\method{mutate}{eeg_lst}(.data, ...)

\method{transmute}{eeg_lst}(.data, ...)

\method{filter}{eeg_lst}(.data, ...)

\method{summarise}{eeg_lst}(.data, ...)

\method{group_by}{eeg_lst}(.data, ...)

\method{ungroup}{eeg_lst}(.data, ...)

\method{groups}{eeg_lst}(x)

\method{group_vars}{eeg_lst}(x)

\method{select}{eeg_lst}(.data, ...)

\method{rename}{eeg_lst}(.data, ...)

\method{left_join}{eeg_lst}(x, y, by = NULL, copy = FALSE,
  suffix = c(".x", ".y"), ...)

\method{semi_join}{eeg_lst}(x, y, by = NULL, suffix = c(".x", ".y"),
  ...)

\method{anti_join}{eeg_lst}(x, y, by = NULL, suffix = c(".x", ".y"),
  ...)

\method{tbl_vars}{eeg_lst}(x)
}
\arguments{
\item{.data}{An eeg_lst.}

\item{...}{Name-value pairs of expressions; see  \link[dplyr:dplyr]{dplyr} for more help.}
}
\value{
An eeg_lst object.
}
\description{
Manipulate the signal_tbl and the segments table of an eeg_lst.
}
\details{
Wrappers for \link[dplyr:dplyr]{dplyr}'s commands that act on different parts
\code{eggble} objects.
The following wrappers have been implemented for \code{eeg_lst} objects:
\itemize{
\item \code{mutate()} adds new variables and preserves existing ones. Variables that are a function of a channel are added to the signal_tbl table, and other variables are added to the segments table.
\item \code{transmute()} like \code{mutate} but drops non-used variables of the referred table, except for the obligatory columns starting with \code{.}.
\item \code{filter()}: finds segments/samples where conditions are true. Segments/samples where the condition evaluates to NA are dropped.
\item \code{summarize()} summarizes the channel of the signal_tbl table
\item \code{group_by()}: allows that operations would be performed "by group".
\item \code{ungroup()}: removes the grouping created by group_by.
\item \code{select()} keeps only the mentioned variables from the refered table, except for the obligatory columns starting with \code{.}.
\item \code{rename()}: keeps all variables.
\item \code{left_join()}: left-joins an external table to the segments table of the eeg_lst.
\item \code{semi_join()}: semi-joins an external table to the segments table of the eeg_lst.
\item \code{anti_join()}: anti-joins an external table to the segments table of the eeg_lst.
}

These commands always return the entire eeg_lst so that
they can be ' piped using \link[magrittr:magrittr]{magrittr} 's pipe, \link[magrittr:`\%>\%`]{\%>\%}.
}
\examples{
\dontrun{

faces_segs \%>\% select(O1, O2, P7, P8)
}
}
\seealso{
\link{summarize_at_ch}, \link{summarize_all_ch}, \link{rollup}, \link{rollup_at_ch}, \link{rollup_all_ch}, \link{bind} for the extended dplyr-like functions.

Other dplyr functions: \code{\link{summarize_ch}}
}
\concept{dplyr functions}
