% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_ext.R
\name{summarize_ch}
\alias{summarize_ch}
\alias{summarize_at_ch}
\alias{summarize_all_ch}
\alias{summarize_at_ch.eeg_lst}
\alias{summarise_at_ch}
\alias{summarize_all_ch.eeg_lst}
\alias{summarise_all_ch}
\title{Summarize multiple channels}
\usage{
summarize_at_ch(.tbl, ...)

summarize_all_ch(.tbl, ...)

\method{summarize_at_ch}{eeg_lst}(.tbl, .vars, .funs, ...)

summarise_at_ch(.tbl, ...)

\method{summarize_all_ch}{eeg_lst}(.tbl, .funs, ...)

summarise_all_ch(.tbl, ...)
}
\arguments{
\item{.tbl}{An eeg_lst object.}

\item{...}{Additional arguments for the function calls in
\code{.funs}. These are evaluated only once, with \link[rlang:tidy-dots]{tidy dots} support.}

\item{.vars}{A list of channels generated by vars(), a character vector of channel names, or NULL.}

\item{.funs}{List of function calls generated by \code{\link[=funs]{funs()}}, or a
character vector of function names, or simply a function.

Bare formulas are passed to \code{\link[rlang:as_function]{rlang::as_function()}} to create
purrr-style lambda functions. Note that these lambda prevent
hybrid evaluation from happening and it is thus more efficient to
supply functions like \code{mean()} directly rather than in a
lambda-formula.}
}
\description{
These are scoped variants of \code{summarize()} that apply operations on a selection of channels
}
\details{
\itemize{
\item \code{summarize_at_ch} allows for selecting the channels  using the same name-based select_helpers just like with \code{select()}.
\item \code{summarize_all_ch} summarizes all channels.
}
}
\seealso{
Other dplyr functions: \code{\link{dplyr-eeguana}}
}
\concept{dplyr functions}
\concept{summarizing functions}
