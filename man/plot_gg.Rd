% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_gg}
\alias{plot_gg}
\alias{plot_gg.eeg_lst}
\title{Create an ERP plot}
\usage{
plot_gg(.data, ...)

\method{plot_gg}{eeg_lst}(.data, x = time, y = .value, ...,
  max_sample = 6400)
}
\arguments{
\item{.data}{An \code{eeg_lst} object.}

\item{...}{List of name value pairs giving aesthetics to map to
variables. The names for x and y aesthetics are typically omitted because
they are so common; all other aesthetics must be named.}

\item{x}{List of name value pairs giving aesthetics to map to
variables. The names for x and y aesthetics are typically omitted because
they are so common; all other aesthetics must be named.}

\item{y}{List of name value pairs giving aesthetics to map to
variables. The names for x and y aesthetics are typically omitted because
they are so common; all other aesthetics must be named.}

\item{max_sample}{Downsample to approximately 6400 samples by default.}
}
\value{
A ggplot object
}
\description{
\code{plot_gg} initializes a ggplot object which takes an \code{eeg_lst} object as
its input data. Layers can then be added in the same way as for a
\code{ggplot2::ggplot} object.
}
\details{
If necessary, \code{plot_gg} will first downsample the \code{eeg_lst} object so that there is a
maximum of 6400 samples. The \code{eeg_lst} object is then converted to a long-format
tibble via \link{as_tibble}. In this tibble, the \code{.source} variable is the
channel/component name and \code{.value} its respective amplitude. The sample
number (\code{.sample_id} in the \code{eeg_lst} object) is automatically converted to milliseconds
to create the variable \code{time}. By default, time is plotted on the
x-axis and amplitude on the y-axis.

To add additional components to the plot such as titles and annotations, simply
use the \code{+} symbol and add layers exactly as you would for \code{ggplot::ggplot}.
}
\examples{

# Plot grand averages for selected channels
data_faces_ERPs \%>\% 
  # select the desired electrodes
  select(O1, O2, P7, P8) \%>\% 
  plot_gg() + 
      # add a grand average wave
      stat_summary(fun.y = "mean", geom ="line", alpha = 1, size = 1.5, 
               aes(color = condition)) +
      # facet by channel
      facet_wrap(~ .source) + 
      theme(legend.position = "bottom") 

}
\seealso{
Other plot: \code{\link{plot.eeg_lst}},
  \code{\link{plot_in_layout}}, \code{\link{plot_topo}}
}
\concept{plot}
